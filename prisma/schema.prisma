// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator dbml {
  provider = "prisma-dbml-generator"
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int        @id @default(autoincrement())
  email       String     @unique
  password    String     @db.VarChar(255)
  name        String?    @db.VarChar(255)
  phone       String?
  created     DateTime?  @default(now())
  isActive    Boolean    @default(true)
  lastActive  DateTime   @updatedAt
  prefs       UserPrefs?
  cart        Cart?
  wishlist    Wishlist?
  wishlistId  Int?
  userGroup   UserGroup  @relation(fields: [userGroupId], references: [id])
  userGroupId Int        @default(1)
  order       Order[]
}

model UserGroup {
  id    Int    @id @default(autoincrement())
  title String
  user  User[]
}

model UserPrefs {
  id     Int   @id @default(autoincrement())
  prefs  Json?
  user   User  @relation(fields: [userId], references: [id])
  userId Int   @unique
}

model Cart {
  id      Int           @id @default(autoincrement())
  details CartDetails[]
  user    User          @relation(fields: [userId], references: [id])
  userId  Int           @unique
}

model CartDetails {
  id        Int      @id @default(autoincrement())
  product   Product? @relation(fields: [productId], references: [id])
  productId Int?
  cart      Cart     @relation(fields: [cartId], references: [id])
  cartId    Int      @unique
}

model Wishlist {
  id      Int               @id @default(autoincrement())
  details WishlistDetails[]
  user    User              @relation(fields: [userId], references: [id])
  userId  Int               @unique
}

model WishlistDetails {
  id         Int      @id @default(autoincrement())
  product    Product? @relation(fields: [productId], references: [id])
  productId  Int?
  wishlist   Wishlist @relation(fields: [wishlistId], references: [id])
  wishlistId Int      @unique
}

model Product {
  id              Int               @id @default(autoincrement())
  sku             String            @unique @db.VarChar(32)
  price           Int               @default(0)
  priceBefore     Int?
  discount        Int?
  created         DateTime?         @default(now())
  updated         DateTime?         @updatedAt
  isActive        Boolean           @default(true)
  title           String?           @db.VarChar(128)
  description     String?           @db.VarChar(1024)
  text            String?           @db.Text
  seoH1           String?           @db.VarChar(128)
  seoTitle        String?           @db.VarChar(255)
  seoDescription  String?           @db.VarChar(1024)
  brand           Brand             @relation(fields: [brandId], references: [id])
  brandId         Int               @default(1)
  category        Category          @relation(fields: [categoryId], references: [id])
  categoryId      Int               @default(1)
  Image           Image[]
  WishlistDetails WishlistDetails[]
  CartDetails     CartDetails[]
  OrderProducts   OrderProducts[]
}

model Image {
  id        Int     @id @default(autoincrement())
  title     String? @db.VarChar(255)
  alt       String? @db.VarChar(255)
  order     Int     @default(0)
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  path      String? @db.VarChar(512)
}

model Category {
  id             Int       @id @default(autoincrement())
  created        DateTime? @default(now())
  updated        DateTime? @updatedAt
  isActive       Boolean   @default(true)
  title          String?   @db.VarChar(128)
  description    String?   @db.VarChar(1024)
  text           String?   @db.Text
  seoH1          String?   @db.VarChar(128)
  seoTitle       String?   @db.VarChar(255)
  seoDescription String?   @db.VarChar(1024)
  thumbnail      String?
  parentCategory Int       @default(1)
  Product        Product[]
}

model Brand {
  id             Int       @id @default(autoincrement())
  created        DateTime? @default(now())
  updated        DateTime? @updatedAt
  isActive       Boolean   @default(true)
  title          String?   @db.VarChar(128)
  description    String?   @db.VarChar(1024)
  text           String?   @db.Text
  seoH1          String?   @db.VarChar(128)
  seoTitle       String?   @db.VarChar(255)
  seoDescription String?   @db.VarChar(1024)
  thumbnail      String?
  logo           String?
  Product        Product[]
}

model Order {
  id            Int           @id @default(autoincrement())
  created       DateTime?     @default(now())
  updated       DateTime?     @updatedAt
  User          User          @relation(fields: [userId], references: [id])
  userId        Int
  total         Int
  status        OrderStatus   @relation(fields: [statusId], references: [id])
  statusId      Int           @default(1)
  discount      Int?
  deliveryPrice Int           @default(0)
  details       OrderDetails?

  OrderProducts   OrderProducts @relation(fields: [orderProductsId], references: [id])
  orderProductsId Int           @unique
}

model OrderStatus {
  id       Int     @id @default(autoincrement())
  title    String
  isActive Boolean @default(true)
  Order    Order[]
}

model OrderDetails {
  id             Int       @id @default(autoincrement())
  created        DateTime? @default(now())
  updated        DateTime? @updatedAt
  clientComment  String?   @db.VarChar(1024)
  managerComment String?   @db.VarChar(1024)
  city           String?
  adress         String?
  phone          String?
  recipient      String?
  promocode      String?
  order          Order     @relation(fields: [orderId], references: [id])
  orderId        Int       @unique
}

model OrderProducts {
  id        Int     @id @default(autoincrement())
  orderId   Int     @unique
  productId Int     @unique
  quantity  Int
  Product   Product @relation(fields: [productId], references: [id])
  Order     Order?
}

model Settings {
  id            Int             @id @default(autoincrement())
  SettingsItems SettingsItems[]
}

model SettingsItems {
  id         Int       @id @default(autoincrement())
  Settings   Settings? @relation(fields: [settingsId], references: [id])
  settingsId Int?
}

model Localisation {
  id  Int     @id @default(autoincrement())
  key String? @db.VarChar(64)
  en  String? @db.Text
  he  String? @db.Text
  ru  String? @db.Text
}
